{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","setTimeout","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"4MAwCeA,EAnCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEpB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAiBA,OACE,uBAAMC,SAZa,SAAAC,GACnBA,EAAEC,iBAEDJ,EAAWK,OAAOC,OAAS,GAAMR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OAGvEN,EAAc,KAMd,UACE,6CACA,uBACEO,KAAK,OACLC,MAAQT,EACRU,SArBoB,SAAAP,GACxBF,EAAcE,EAAEQ,OAAOF,c,8BCOZG,EAjBF,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACRC,EADQ,0DACiDC,UAAUH,GAD3D,sDAGUI,MAAMF,GAHhB,cAGRG,EAHQ,gBAIOA,EAAUC,OAJjB,uBAIPC,EAJO,EAIPA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVxB,kBAcPM,GAdO,4CAAH,sDCWEO,EATK,SAAC,GAAsB,IAArBb,EAAoB,EAApBA,IAAKU,EAAe,EAAfA,MAAe,EAARD,GAEhC,OACE,qBAAKK,UAAU,OAAf,SACE,qBAAKC,IAAKf,EAAKgB,IAAKN,OC+BXO,EA9BC,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAEhB,ECL0B,SAACA,GAE3B,MAA0Bd,mBAAS,CACjCqB,KAAM,GACNa,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OAXAC,qBAAU,WACRC,YAAW,WACTzB,EAAQC,GACPyB,MAAK,SAAAC,GAAI,OAAIJ,EAAS,CACrBf,KAAMmB,EACNN,SAAS,SAEV,OAEF,CAACpB,IAEGqB,EDbiBM,CAAa3B,GAA9BO,EAAP,EAAOA,KAAMa,EAAb,EAAaA,QAEb,OACE,qCACE,6BAAKpB,IACJoB,GAAW,yCACV,sBAAKJ,UAAU,WAAf,UACA,qBAAKA,UAAU,oBAGbT,EAAKE,KAAI,SAAAC,GAAG,OACV,wBAAC,EAAD,2BACMA,GADN,IAEEkB,IAAKlB,EAAIC,gBEORkB,EAxBM,WAEnB,MAAoC3C,mBAAS,IAA7C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAGA,OACE,sBAAK+B,UAAU,OAAf,UACE,8CACA,cAAC,EAAD,CAAa/B,cAAgBA,IAC7B,uBACA,6BAEI6C,EAAWrB,KAAI,SAAAT,GAAQ,OACrB,cAAC,EAAD,CACEA,SAAUA,GACLA,YCdnB+B,IAASC,OACP,cAAC,EAAD,IAEGC,SAASC,eAAe,W","file":"static/js/main.3fdcd1a7.chunk.js","sourcesContent":["/* eslint-disable no-unused-expressions */\r\nimport React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst AddCategory = ({setCategories}) => {\r\n\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = e => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    (inputValue.trim().length > 2) && setCategories(cats => [inputValue,...cats]);\r\n\r\n\r\n    setInputValue('');\r\n    \r\n  }\r\n\r\n\r\n  return (\r\n    <form onSubmit={ handleSubmit }>\r\n      <h3>AddCategory</h3>\r\n      <input \r\n        type='text'\r\n        value={ inputValue }\r\n        onChange={ handleInputChange } \r\n      />\r\n    </form>\r\n  )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;","const getGifs = async (category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?limit=20&q=${encodeURI(category)}&api_key=svcGifq9YXSybtnxWrgeX0weIskvkmD4`\r\n\r\n  const respuesta = await fetch(url)\r\n  const {data} = await respuesta.json()\r\n\r\n  const gifs = data.map(img => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url\r\n    }\r\n  })\r\n  \r\n  return gifs;\r\n}\r\n\r\nexport default getGifs;","import React from 'react'\r\n\r\nconst GifGridItem = ({url, title, id}) => {\r\n  \r\n  return (\r\n    <div className=\"card\">\r\n      <img src={url} alt={title}></img>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GifGridItem\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport GifGridItem from './GifGridItem';\r\n\r\n\r\n\r\nconst GifGrid = ({category}) => {\r\n\r\n  const {data, loading} = useFetchGifs(category); \r\n\r\n  return (\r\n    <>\r\n      <h3>{category}</h3>\r\n      {loading && <p>Cargando</p>}\r\n      { <div className=\"card-box\">\r\n        <div className=\"card-box__title\">\r\n        </div>\r\n        {\r\n          data.map(img => (\r\n            <GifGridItem \r\n              {...img}\r\n              key={img.id}\r\n            />\r\n          ))\r\n        }\r\n      </div>\r\n     } \r\n    \r\n    </>\r\n  )\r\n}\r\n\r\nGifGrid.propTypes = {\r\ncategory: PropTypes.string.isRequired\r\n}\r\n\r\nexport default GifGrid\r\n","import { useEffect, useState } from \"react\"\r\nimport getGifs from '../helpers/getGifs'\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true\r\n  });\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      getGifs(category)\r\n      .then(imgs => setState({\r\n        data: imgs,\r\n        loading: false\r\n      }))\r\n    }, 500);\r\n    \r\n  }, [category])\r\n\r\n  return state;\r\n}","import React, { useState } from 'react'\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\n\r\nconst GifExpertApp = () => {\r\n\r\n  const [categories, setCategories] = useState([]);\r\n\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={ setCategories } />\r\n      <hr/>\r\n      <ol>\r\n        {\r\n          categories.map(category => (\r\n            <GifGrid\r\n              category={category}\r\n              key={category}\r\n            />\r\n          ))\r\n        }\r\n      </ol>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp'\n\n\nReactDOM.render(\n  <GifExpertApp\n\n  />,document.getElementById('root')\n);"],"sourceRoot":""}